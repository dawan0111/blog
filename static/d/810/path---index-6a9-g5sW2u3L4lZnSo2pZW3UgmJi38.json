{"data":{"site":{"siteMetadata":{"title":"정리노트","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"React Portals 툴팁을 렌더링하던 도중 상위 컴포먼트의 style때문에 위치잡는데 어려움이 생겼다 Portal로 해결됬다 보통 컴포먼트 렌더링 컴포먼트 메서드에서 엘리먼트를 반환할때 그 엘리먼트는 부모노드의 가장 가까운 저식으로 마운트된다. 그렇기 때문에 상위컴포먼트의 영향을 받아 문제가 생길 수도 있다. Portals Portals을 사용하면 …","fields":{"slug":"/react/react---portals/"},"frontmatter":{"date":"November 26, 2019","title":"React - Portals","category":"react"}}},{"node":{"excerpt":"Typescript keyof 기본 색인타입으로 동적으로 object의 properties를 확인하는데 사용할 수 있다 object의 properties를 선택하는 경우 propertyNames에 key를 배열의 형태로 넘기면 object의 해당 key만 반환하는 코드이다. 만약 propertyNames가 object에 존재해야만 한다면 keyof를 사용…","fields":{"slug":"/typescript/typescript---keyof/"},"frontmatter":{"date":"November 19, 2019","title":"typescript - keyof 기본","category":"typescript"}}},{"node":{"excerpt":"Typescript Generics(제네릭) 단일 유형이 아닌 다양한 유형에서 작동될수 있는 컴포먼트 작성이 가능하다. 전달된 argament와 동일한 유형을 return 하는 경우 만약 문자를 입력하는 경우에는 문자용으로 새 함수를 생성해야된다. any 유형을 사용할 경우 any 유형을 사용하여 만들어도 되지만 반환될때 해당 유형의 정보가 손실되어도 정…","fields":{"slug":"/typescript/typescript---generics/"},"frontmatter":{"date":"November 15, 2019","title":"TypeScript - Generics","category":"typescript"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}