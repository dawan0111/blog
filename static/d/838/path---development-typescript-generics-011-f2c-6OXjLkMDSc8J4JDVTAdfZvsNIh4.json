{"data":{"site":{"siteMetadata":{"title":"정리노트","author":"김대완","siteUrl":"https://dawan0111.github.io/blog","comment":{"disqusShortName":"","utterances":"dawan0111/blog"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"d4817dd0-32d1-5661-bec1-468c54ffc535","excerpt":"Typescript Generics(제네릭) 단일 유형이 아닌 다양한 유형에서 작동될수 있는 컴포먼트 작성이 가능하다. 전달된 argament와 동일한 유형을 return 하는 경우 만약 문자를 입력하는 경우에는 문자용으로 새 함수를 생성해야된다. any 유형을 사용할 경우 any 유형을 사용하여 만들어도 되지만 반환될때 해당 유형의 정보가 손실되어도 정상적으로 반환이 될수 있다는 문제가 있다. 재네릭 사용 후 identity 함수에 ‘T’ 라는 유형변수를 arg에서 캡처하여 return…","html":"<h1 id=\"typescript-generics제네릭\"><a href=\"#typescript-generics%EC%A0%9C%EB%84%A4%EB%A6%AD\" aria-label=\"typescript generics제네릭 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Typescript Generics(제네릭)</h1>\n<p>단일 유형이 아닌 다양한 유형에서 작동될수 있는 컴포먼트 작성이 가능하다.</p>\n<h3 id=\"전달된-argament와-동일한-유형을-return-하는-경우\"><a href=\"#%EC%A0%84%EB%8B%AC%EB%90%9C-argament%EC%99%80-%EB%8F%99%EC%9D%BC%ED%95%9C-%EC%9C%A0%ED%98%95%EC%9D%84-return-%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\" aria-label=\"전달된 argament와 동일한 유형을 return 하는 경우 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전달된 argament와 동일한 유형을 return 하는 경우</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">identity</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> arg<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>만약 문자를 입력하는 경우에는 문자용으로 새 함수를 생성해야된다.</p>\n<h3 id=\"any-유형을-사용할-경우\"><a href=\"#any-%EC%9C%A0%ED%98%95%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%A0-%EA%B2%BD%EC%9A%B0\" aria-label=\"any 유형을 사용할 경우 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>any 유형을 사용할 경우</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">identity</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> arg<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>any 유형을 사용하여 만들어도 되지만 반환될때 해당 유형의 정보가 손실되어도 정상적으로 반환이 될수 있다는 문제가 있다.</p>\n<h3 id=\"재네릭-사용-후\"><a href=\"#%EC%9E%AC%EB%84%A4%EB%A6%AD-%EC%82%AC%EC%9A%A9-%ED%9B%84\" aria-label=\"재네릭 사용 후 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재네릭 사용 후</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">  <span class=\"token keyword\">function</span> identity<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> arg<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>identity 함수에 ‘T’ 라는 유형변수를 arg에서 캡처하여 return할때 사용한다. 이로인해 반환알때도 동일한 유형만 반환 가능하다.</p>\n<h3 id=\"사용법\"><a href=\"#%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"사용법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용법</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">  identity<span class=\"token operator\">&lt;</span><span class=\"token string\">'string'</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world!!'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>identity 함수를 호출할때 먼저 타입을 선언하는 방법이다</p>\n<h3 id=\"사용법2\"><a href=\"#%EC%82%AC%EC%9A%A9%EB%B2%952\" aria-label=\"사용법2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용법2</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">  <span class=\"token function\">identity</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world!!'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>입력받은 argament의 타입을 유추해 내는 방법이다. 컴파일러가 유추하지 못하는 경우가 아니라면 이렇게 쓰는게 읽기 더 읽기 쉬워 보인다.</p>\n<h2 id=\"generics-제약-방법\"><a href=\"#generics-%EC%A0%9C%EC%95%BD-%EB%B0%A9%EB%B2%95\" aria-label=\"generics 제약 방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generics 제약 방법</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> identity<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Animal</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> arg<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>만약 identity에 ‘name’이라는 속성이 있는 유형으로 제한하고 싶다면 ‘.name’ 속성을 가진 interface를 만들고 extends로 제약 조건을 나타내면 된다.</p>","frontmatter":{"title":"TypeScript - Generics","date":"November 15, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/development/typescript---generics/","previous":null,"next":{"fields":{"slug":"/typescript/typescript---keyof/"},"frontmatter":{"title":"typescript - keyof","category":"typescript"}}}}